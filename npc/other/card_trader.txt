//===== rAthena Script ======================================= 
//= Card Trader
//===== By: ================================================== 
//= Elias (og2)
//===== Current Version: ===================================== 
//= 1.4
//===== Compatible With: ===================================== 
//= rAthena Project; SVN r15340+
//===== Description: ========================================= 
//= Card and Points Trader
//===== Additional Comments: ================================= 
//= 1.0 Translated from the Official [Elias]
//= 1.1 Fixed variables and optimized script [Elias]
//= 1.2 Fixed char being stuck with breaks [Elias] (bugreport:5374)
//= 1.3 Optimized: reduced from 123kb to 7kb! [Euphy]
//= 1.4 Variables don't need to load OnInit. [Euphy]
//= 1.4a Misc. [Capuche]
//============================================================ 

prontera,115,90,0	script	Putty	4_F_01,{
	mes "[Card Trader]";
	mes "Hi, "+strcharinfo(0)+"!";
	mes "What can I do for you?";
	next;
	switch(select(" > Information: > Trade in cards: > Point shop (^0055FF"+getd(.Points$)+"^000000): > Leave")) {
	case 1:
		mes "[Card Trader]";
		mes "Do you find that you've got";
		mes "useless cards lying around?";
		mes "I'll be glad to take them off";
		mes "your hands!";
		next;
		mes "[Card Trader]";
		mes "I'll give you ^0055FF"+.Points[0]+" Point"+((.Points[0] == 1)?"":"s")+"^000000 for each";
		mes "card you give me, and";
		mes "^0055FF"+.Points[1]+" Points^000000 for MVP cards.";
		mes "You can trade those points";
		mes "for items later on.";
		mes "How does that sound?";
		close;
	case 2:
		mes "[Card Trader]";
		mes "Select the cards you";
		mes "want to trade in.";
		if (.Level) {
			mes " ";
			mes "They must be dropped";
			mes "by monsters of level";
			mes .Level+" and above.";
		}
		deletearray @sold_nameid[0],getarraysize(@sold_nameid);
		callshop "card_shop",2;
		npcshopattach "card_shop";
		end;
	case 3:
		mes "[Card Trader]";
		mes "You have ^0055FF"+getd(.Points$)+"^000000 Point"+((getd(.Points$) == 1)?".":"s.");
		callshop "card_shop",1;
		npcshopattach "card_shop";
		end;
	case 4:
		mes "[Card Trader]";
		mes "*yawn*";
		mes "See you later!";
		close;		
	}
 
OnSellItem:
	mes "Cards to sell:";
	mes "-----------------------------------";
	for(set .@i,0; .@i < getarraysize(@sold_nameid); set .@i,.@i+1)
		if (@sold_nameid[.@i] > 4000 && @sold_nameid[.@i] < 490236) {
			if (.Level) {
				query_sql("SELECT `LV` FROM `mob_db_re` WHERE `DropCardid` = "+@sold_nameid[.@i],.@lv);
				if (.@lv < .Level) {
					dispbottom getitemname(@sold_nameid[.@i])+" is under the minimum level.";
					continue;
				}
			}
			set .@card_id[getarraysize(.@card_id)], @sold_nameid[.@i];
			set .@card_amt[getarraysize(.@card_amt)], @sold_quantity[.@i];
			set .@mvp, compare(.MVP$,""+@sold_nameid[.@i]);
			mes ((.@mvp)?"  ^FF0000":"  ^777777")+@sold_quantity[.@i]+"x "+getitemname(@sold_nameid[.@i])+"^000000";
			set .@card_total, .@card_total+(@sold_quantity[.@i]*((.@mvp)?.Points[1]:.Points[0]));
		}
	deletearray @sold_nameid[0], getarraysize(@sold_nameid);
	deletearray @sold_quantity[0], getarraysize(@sold_quantity);
	if (!.@card_id) {
		mes "  ^777777(none)^000000";
		close;
	}
	mes " ";
	mes "---------- Total: ^0055FF"+.@card_total+" pt.^000000 -------";
	next;
	if(select(" > ^0055FFComplete trade...^000000: > ^777777Cancel^000000") == 2) {
		mes "[Card Trader]";
		mes "Oh, okay...";
		close;
	}
	for(set .@i,0; .@i < getarraysize(.@card_id); set .@i,.@i+1)
		delitem .@card_id[.@i],.@card_amt[.@i];
	setd .Points$, getd(.Points$)+.@card_total;
	mes "[Card Trader]";
	mes "All done!";
	close;
 
OnBuyItem:
	for(set .@i,0; .@i < getarraysize(@bought_nameid); set .@i,.@i+1)
		for(set .@j,0; .@j <getarraysize(.Shop); set .@j,.@j+2)
			if (@bought_nameid[.@i] == .Shop[.@j]) {
				set .@cost, .@cost+(.Shop[.@j+1]*@bought_quantity[.@i]);
				break;
			}
	if (.@cost > getd(.Points$)) {
		mes "[Card Trader]";
		mes "You don't have enough Points.";
	}
	else {
		mes "Items purchased:";
		mes "-----------------------------------";
		for(set .@i,0; .@i < getarraysize(@bought_nameid); set .@i,.@i+1) {
			getitem @bought_nameid[.@i], @bought_quantity[.@i];
			mes "  ^777777"+@bought_quantity[.@i]+"x "+getitemname(@bought_nameid[.@i])+"^000000";
		}
		mes " ";
		mes "---------- Total: ^0055FF"+.@cost+" pt.^000000 -------";
		setd .Points$, getd(.Points$)-.@cost;
	}
	deletearray @bought_nameid[0], getarraysize(@bought_nameid);
	deletearray @bought_quantity[0], getarraysize(@bought_quantity);
	close;
 
OnInit:
	set .Level,0;		   // Minimum monster level to trade corresponding cards.
	set .Points$,"#Card_Points";	// Variable to store points.
	setarray .Shop[0],		// Card Shop items: <ID>,<point cost>
	  23926,20,	//Shadow_9_Refine_Hammer
	  23436,5,	//Shadow_Refine_Hammer
	  23720,3,	//Shadow_Random_Mix
	  100206,3,	//Class_Sha_R_M_Magic
	  100205,3,	//Class_Sha_R_M_Melee
	  100208,3,	//Skill_Sha_R_M_Magic
	  100207,3,	//Skill_Sha_R_M_Melee
	  14629,1, //Enchant_Stone_Box
	  14681,1, //Enchant_Stone_Box2
	  14695,1, //Enchant_Stone_Box3
	  22826,1, //Enchant_Stone_Box4
	  22868,1, //Enchant_Stone_Box5
	  22905,1, //Enchant_Stone_Box6
	  22953,1, //Enchant_Stone_Box7
	  23001,1, //Enchant_Stone_Box8
	  23058,1, //Enchant_Stone_Box9
	  23086,1, //Enchant_Stone_Box10
	  23174,1, //Enchant_Stone_Box11
	  23299,1, //Enchant_Stone_Box12
	  23524,5, //Enchant_Stone_Box13
	  23629,5, //Enchant_Stone_Box14
	  23682,5, //Enchant_Stone_Box15
	  23770,5, //Enchant_Stone_Box16
	  9510,5, //Enchant_Stone_Box17
	  100019,5, //Enchant_Stone_Box18
	  100052,5, //Enchant_Stone_Box19
	  100202,5, //Enchant_Stone_Box20
	  100314,5, //Enchant_Stone_Box21
	  100502,5, //Enchant_Stone_Box22
	  100721,5, //Enchant_Stone_Box23
	  100920,5, //Enchant_Stone_Box24
	  101103,5, //Enchant_Stone_Box25
	  101271,5, //Enchant_Stone_Box26
	  101416,5,	//Costume Enchant Stone Box 27
	  101675,5,	//Costume Enchant Stone Box 28
	  101876,5,	//Costume Enchant Stone Box 29
	  100910,3,	//Special Dual Enchant Stone Box
	  23913,1,  //Job_Enchant_Stone_Box
	  100870,1; //S_Enchant_Stone_Box
	setarray .Points[0],2,10;	// Points per <normal card>,<MVP card>
	set .MVP$,			// List of MVP cards.
	"4047,4054,4074,4091,4121,4123,4127,4128,4131,4132,4134,4135,4137,4142,4143,4144,4145,4146,4147,4148,4163,4168,4169,4174,4179,4183,4197,4198,4203,4207,4210,4236,4237,4238,4241,4243,4246,4250,4254,4263,4266,4276,4290,4300,4302,4305,4306,4318,4324,4330,4342,4352,4354,4357,4359,4361,4363,4365,4367,4372,4374,4376,4384,4386,4391,4392,4393,4394,4395,4396,4397,4398,4399,4403,4406,4407,4408,4410,4419,4423,4425,4426,4427,4428,4429,4430,4431,4440,4441,4451,4456,4457,4462,4463,4507,4508,4509,4520,4524,4525,4526,4527,4528,4529,4532,4533,4534,4556,4557,4559,4560,4561,4562,4563,4564,4565,4566,4574,4575,4576,4577,4578,4579,4580,4581,4590,4591,4592,4601,4603,4605,4606,4610,4625,4631,4632,4636,4647,4648,4649,4650,4651,4652,4662,4671,4672,4673,4674,4675,4676,4677,4678,4679,4680,4681,4682,4683,4684,4685,4686,4687,4688,4689,4690,4691,4692,4693,4694,4695,4696,4697,27020,27025,27081,27104,27105,27106,27109,27126,27150,27151,27152,27162,27164,27165,27180,27182,27183,27262,27263,27265,27305,27318,27319,27322,27323,27324,27325,27326,27327,31023,31024,31025,31026,300078,300079,300080,300099,300100,300103,300107,4480,4481,4482,4483,4484,4485,4486,4487,4488,4489,4490,4491,4492,4493,4494,4495,4496,4497,4498,4499,4500,4501,4502,4503,4504,4535,4536,4537,4538,4539,4540,4541,4542,4543,4544,22875,27209,27211,27212,27213,27214,27215,27216,27217,27218,27219,27220,27221,27222,27224,27225,300139,300207,300209,300318,300319,300320,300321,300322,300323,300324,300325,300326,300327,300328,300330,300331,300332,300334,300335,300337,300338,300339,300340,300341,300343,300344,300345,300348,300349,300350,300351,300352,300353,300354,300355,300392,300393,300394,300395,300396,300397,300398,300399,300400,300401,300402,300403,300404,300405,300406,300407,300408,300409,311071,311440";
	
	npcshopdelitem "card_shop",909;
	for(set .@i,0; .@i < getarraysize(.Shop); set .@i,.@i+2)
		npcshopadditem "card_shop",.Shop[.@i],.Shop[.@i+1];
	end;
}
-	shop	card_shop	-1,909:-1